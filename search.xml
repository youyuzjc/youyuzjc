<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>排序</title>
      <link href="/2022/12/26/%E6%8E%92%E5%BA%8F/"/>
      <url>/2022/12/26/%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5c910327573e16b56fafa26ad38c658d186f1e8d826453c191397acf10b6faf9">38a0ac41f43f77f4bde8ef18cf10f374cfe101338b63647f9329d408d83a77ee3210e5d78a861c30a55706ed453a7b75aaec0ef83eda441403771ae51b6185d6e53aad680a61f034bcaa61cc37c516250d9726cd74e82818b7d87942a3569a7dca7b08838b71a98af747b86f3bd52f0b46456af94d1371f75bf9784cc5c7a4901bd98c74bb49d704dc360fd60f539ff5a29dd7260458feee1a687d1b57d2f9e20678b26250657e3a9eb72f68f9a5fdc8747fa78d17cec24c989911b2c899ecadeaaebbdef7f7668a72397415af6a22e71110650931ee0c95a4e31e6c35f8a70e073960cd9a7a7c9dbf100ed9d59063b694e3a50777014933ede56e92075bd28f1fbde3ebd5b5468646c70845cd5ff8ebb871136c8fe9b81b5f9da1e125755ceee75bd7fb07a0ded7003dc1fa4a5f5597bab3215841151baf1467f3d78868761ae7145dd71a0bba6a2fbbbc3d004640a46757ccd87544a82ff3ec8ccb8e856beef2849ba9454af59f7af05254edad815b794bfbb9a8b3df602d678571c83919a14b331ba46cc258f30d1e3eb4f7198a57ce764e5ec476114c1b1b665d3d5417c7abe1efc8f421f8156e2fc2d944d13c377c5773929027852f4e892d579eff3b06d0e3299319d443e6a9b100c2cf6e8edccc28bbeb4eb608f7e298d6299a2362a16bc9e4d5ca7adc2896ee83a10caa97cd17eac21fd90983329ca4bc7638cfd80efcc09be0217c4a5e81842ea59f3df8faa819b35bec1257b44d0750323964550cc0bfb600766617e4586743cff8a628ce4a8aaa7e34c2eec368a30957860290464025ad0509a442e77943d82bf11cc04b8f0b6ff4827d69cff00b2f9005aa1a2e0139c6cb7f310d21e4a968c06d8b8c860f937ece640492b8d3d3ae8dd43fa8f2d53934df2d8676b70c265c8169e6f66e0aa4a0944149e88491589acd96c65ca554e43b6da56d3ede519de9a263ade8357a7d5635acc8cf126e6aef812a47d9e4a0b0345df9e17e2a44c6d402f2dce32b88728ae6d052c5aedc0e08aa65a5383097e8c876e22a2efdeee1130ab308391708212675c5d24b99b07aa2c6b677120720c26b9a09210d72836f56ca5d3224f7ab449af94239ba8e5adfff1c8f2c45f02334334cf61cb5c9babbcda26a345fc22bfc564657a0631c1f7a5ea1a8a900fec6a936aa2cce86e0562161b13104b4b88e5ecadc049e0b9425a156030662dc7841ec007462608be42ccd188ca6f681a270e24d16c8c19729de3617e99c846be12eecd4fe7ae09a19736bc60eca2e1fbfb5bf04ddc1a2059647ca7591305f6e4e224628445b6fa988c42c31ae73121056244be0ef0313e99955324fb2d64ae3173f2ee555518227caefee9037f9caaef99e829af2a71745a77178cd478c898a1b2bdfe5e9185a6779ad710450bb465cccb9ed9518a03e4d7cfafdcfe77c15fbfe1697a575deb74334d528fe425069eab43c6f702de4155f29ff0cda4a2f8bbc6f0b6f220a481ecb0a42bcf8c72f2b929af9ece0d4860ce7393926d7d0e6f060128f9f3eda78819749655207e26c9d4742d936164ca3c14f4ff294c71b304c70c0885ac971e9c966ef26cf9692b6120358b9cd919f0db18647f57399deb1274b3e3d1c7d4cc0cdd0116aa9cde0306dc2ed4e5bdece31f74953d39107c9ee16db0cfe4a3eea9f8c449c27b2ae3c154587aca4bd1fc3673ede4a7d39f49a9b194819547d316234ef6b81289f9f21462e17fe7b93b9489ebe039bc8ed7161a09038535867a3905b3d264a3e93b98484487210d02eba22b4c99e2d08631f2889bc540937969a5b7a51109825a1b5d894e8504e8f90a101a5b58bf3b794def0c587ddd7558723d34ee6bb2fddb384094b746b78ce34a6fcd9e7e7ab6e9d1e7ceb050b6123ffe8908951d096329c31b0c6aa84be93a0cf763003ea45d6869f4b1db68423491ce0fcb3a71dec06549082d36b1a5c3ddd3b10ea879269f9380284719a0bbc3966c44ee1e9540e1d5ef19232be768f5488f47094c8b4cb328e40bd168e405456c5dff40d69f494f73651b2930d817a50c4700775745f34c697c73157228bc70cf4119fcae820d78178a334fdddc490b28d189066c7ee83cf32831f871460cb58f3c5540f8e158ec99ba397eb866d3bc49132d2f15119c27577d29ccde2b7496f15e07c34c95dc67f1fefa97da1faa89dac3ded6108a9159bff58b7ef371f9859e5abce8801e79335898bb8b59fb3063cd87db933b8d72954b9af032a005386d807829e07aadd9c4b109ac021712cf17b36122acc00e5f07524a003b3490eb66fc9350cae2f098d58ab0209400d5b6ec1f37b77271f5cfdd55248673a42680c9d32318ab5dc92e63a4dbfb6e4d10ca0507e66d6e9697fdcb9a341b1fb46a7946ee893e56a626e31dcb332b91eece6a1c1bdd005087c6a2199d33fb563542da5d2541387423996c74bd1001c0b4b5e12772500140c4bc4ec0ddd9f283123b3928af237af24196fafd86aa52f6a50123d9bd8dbee0a298255a8580aad1e2d5a491609240735d0a22afe853a9fa7757940a9356ba5aa34a63057a6cc6f57b701bcacafeb92ac2e654b00f044286832d34d3374ccb9f61bcdd3740c530a6e39e1c6175d7e4db7fc300abdbfc0631087db509c3d6f67ea82109c42b038f15ad3c5e3d462ccba932c100b6cd7576604cdf4523f6d29cfc0dd482637d03212969f97a4d4f64b25baf429352e8f6d7b4d29690177a76ec520096bdba0267eebc995f8d6543b9478e179832b8f93c76394a5a71936f316eeff8d487bc4554ae7102dbb44c647a421c224229f1361f167fe4b3bce55e947e6cd539b46df78a651a58d3442651f08eafc76f00fb20d4118ca42d1de0c2ab76a6353b4a32803702971e6908d6bc3e1c6b254385640317a1b940e3292aa59c489cd2fbf8f77c00cee4c0f192f2f4e26280ef1b34b4de38cf67852c1717c741e8b588892f56bf6c817afb00aa43ddfe67325c07380773dade560c1fc66cbc5692b102206a10465b931cbbdf7ae2c003de5637d2a8f57327fa71149a86f739fd8aace34c7305ae7244f67b5ef55dc63d93a0e228376ec8a9cb651cae429ab950549c29083a54bf4cc43f4e2ca52d903589ca2185858debbfd2fc49874aba2b9a4326f0063f3f1f5a35e410ab3855610311b5d9f5a902a5aeeb3c3ad8a2dd772ea2a2d305c3db36dbcfdc31dc48d173118dfe20b54730e6864da08c7a67ebd88f875d722bd94056ef43c2adcfe770f364892aab28fbb1ac082073399a5cec5f06318026385fa9ab86ec4dcaff51b46aea8e0fd381b1d66073b468c50e81ecbcf8217f401555562adf2308cb63d7ca40e08c3da60326aa6b2d05895a232cb0ccef6d3a63b699fe27ff3e9c89f81f0ce6400ff9909859e3ac3209e3abb64bc8c9b4aec42fed4025c26db9f3eb921e2e423c944c0a625c66ad03f8449c4f71df2b9fa1f79474b44fb64bb7a9607caaf080b253f6b5312a831b62475d19db3139d1a3bc36e07228ed95c147cfdb084a6e47fea9a997e94d9067e8bf02e8493397bd5d385fa9675e9cc64264ca957736ade763c6c075b50fdcfc2539716ef769826cb2d5e8d6c46001993e7764f3d7bde73ce493b45add4762340bdaa6a810dd7299a2c68d65bf035126dbee3b63eed490da1d624d4baaf72c24091c473dab1977b4de9effaa682eec52701d5cc5c044d65f70e2acbb5257caa211382d2ffdd683654d0442ed3761914533d34890e4b39deec2c503a3d0fe7a0f8b65dc9064790bd62a10ac9a19159fd9a6b03b5582d122c34c18cd3a5660bd404c248fa6fe4d10a834b9df924c7e5f44501fb4149bc05d735cc0586a73e8b92302f7312f0d1d5c9fe1eb875dbb2debcfdb90e3944a1ac986b49bc4acbba88955acc07c37a25a09a51822bf7d00d4dd0919ffff10091e0de7503854a1e6c4b8f2c0e4a91220d28f5b136569ec87689bf2caf0127d629626a4587eefc401986765e0448f44351841a7939579f5d06714abe34c881bd650462f6069835c6cfa1527c10fe8123fe2ffda89f8a15996d0ad1ec2e3946591bb5622df11daa8cf8ff283631cd4e848c983a5c01238f7a5551d03df490a50e3e359a2bbf8ae6468d7f3e0f695273f4a14ac7a4bf9f98e18322ef79c9e667b02a3528bddd166490ae9b7e6e714aeb6cc043641fc9a82e085600bc6acc49c9773f8206908135cb59d73494dc3ed98b9f4c22f4e4ffd46fee36218df41001cbe7bfb792107e25f313bb36c69b311cc5a816968dc1a7ee358ceea1d17cd223296966ca98eed8d258ec347b5b4b83a4353a33240bacd36bab8d84fd1427006a4013b2f1dad391ecbddd03386ff584d0251be7e30925393be4a5a5bbd226074100bb62abd40d62c8dc8b2daf9f22f7bcc490c10937f8ba6f2e8d3de2f162f1735969d5ce74aa8541b280f426dca85b1abf24de39a8d15de2d834f58be06f07428bedcc13495a4c310a1bdec17fad6bd379d277672332ab977cf38a6de5ce09889977521b0eaccd502a765e452948e5cffb05660c9b228dea18347d50c8dacc2087186604d0fd46af9a1e4ed556f1cdd5c5a1c14c4d5e1eb9889571cca69396689828f4d22ed0a600c4edeab0d32ebbb97a2e81799c217cb829f35bd004287715c2a5d9c32efa0a868a21cfc2cb1e228f01e0363d7bbeb7b189204af6d8e4e78766a12032b9cf05327a43fdf00b52a16bbc6e958b43546c988cb5fbeb9bad4a8e973ca678b5a7e4c65cca0cc4c8a24203959dbe145851cc0108e88bc8999399b031c66f7aee4b89fd89050f48fc50d429f74e1613793024c0190378c6ca3b9ea64364bc0fea567d9c1942e6832739db87f5c3c572f7cf1b99a2a8c06a4838795ba8f9a13283785341e0f049d9a88c87199e44e86e5e8cab0a4adc09cfb055b8460ebf4cc478fb1d0fda6e4a6ab8974c8b1ddc8299330922fa85d6986da488ef0085ae338c5139d4d90dd07cd00388acf8faeb4adde86057b96f240d094b87f4c4d9e8e58d313b684e7294b266357931b8ff2c72d660d0d402a8fad2bde8c74db81efabe3dbd1c341255bd7f3f5d04b461c037a7d6427800a345a1159785516d1fcafe6d9c82d98d9bfb1cf083f481d43d816a83bbb6f8b5c31d9c4d7d95a273f4e9099bfbbec796ea70470437fc930ab54182181b6328f895b00092901565468553e05c9ce122047baef2131ecfc08b96b380a59458744cfdc85ea6e9a8922eeca4fad58e16e0773d053b79c59b187e799cf95b95b0da6eec72a2275e828b852442102d49b7ca26931480ef70c91c96eb19d1d66b3fdae449934b603f24ca7705ef63a6a34f842d35d328deb8c32ade9c10b6acf6b664a6919c4184ab332a414c64c16a467b48282d5f964e608d1cf9b86bbbc1eb248d97b76291850f962f4989c87c44bd69dd0db9a15f34da4217c7e48555a7aff3b3bc1d81905dee19b2301fee229d2f95b2aa2649f21995caec6c495d95d7c4dff613184a02752d508d27e41d187d6cd91ff1bcc1c8ad1e82633304affc12ac67c85caf431174e6b847ad48bb45372796fe26037845844703a91053a95939e5ff4e46cef9b7beebd38672163dd26cd10a45285d5f5ad42a9ff5346ef68eb09dc95e9b28301bf63d29dc2186d7f6d98cce00da17ef457fc91b3c5214245a89b0f9974ef8c1c18cdf00222e1c2105bf9fa37038e14682da203d38e53afdfb3fd47e82a37c661ac05ac7fcf72e1eb886797cb7c75158f6d27aad012cca60b51403405d42fbb6dc4d98d067c0dcee7cb47b28f710705b95eac1dc7bc4f7b1af6011174dba27dd2e2b7ca259543c48e46d4d239d8904333753c12428b94d0fd05da56a2fe817e0a5a9634957a9bab2a5696a8017ce22f4ae38b9291c15b353561e5c0965bfb8a7ac81853ca88a0f32bd99e831325c94f0a34610673a63eda734f05aab1480db3f6ad2f69f8be80849f41b8ac33c8d14cfe2e2132400b9d9bac5102f7724f8e5b375d830dc5662ccddb32438efd3d4e6f529cb9cd784faf40262b20f60ffe3bbca6103504fab2c6300bb5efd35fb121258bc6bd7f3fe30be87205483a5d6a55360fe71b7c21ea405527231400e1a1bf00d4f6e5b7f38fd6efe518c17a7564ac69c5060b5e878e0f315e4ea93b71b3b65dfab6980e4714cb37aa13d48de8d82d39e6df50c4c481b8125cfb42b7e479db7c4c8db18c1afabe8e2915157ed08d6b32db504546db45a73f4140210c1a8ce8df2e0167fd6ee0bd4c449a7d312b44ca7b831579328e5d8e452e892dcfc91fd9ac2db9f076750737e9fb16e30d5efb2e7c04512c818911dd2cfbfa2789d08c94677c8342282be16836db85131652ab5142c49d628b45121e29036623194e2315f4c95bd6e2cda2538eaf065cf0d603cdd67004a284a7a8d6e70bf5d1a778036bb4bae5c25bc6af9eab772842ddb5a9ca3929d1af98e7648017c076e359382b8298ad71cf1d0f9351dae367f48cfaff4b92e8273c4903c3c1fd9a7062e4bfccc6475ae48a568093a8f0324373c33bec51220d2f2f83fbe22c5f947c4428598dfae96b9399add46cbc53e26fe032ece427b9ca6d39f7fff79627495d7b1a24129bb98137163028eaef14f1cd32f8b42c9602503881eb1f2ceb247a8deab1a5114106445fbdddad0dc9e5387a1de0260a2c54c916bd9ebaade0d8be4830ce482ebca64f1935ec1d569d3cceb41cd453fa1efec02ee663dc9f3ce4aeeeb66ed2eca8943da7745c05758ea604f1ed9deda83e015b2785a07ba51bf8be64c3e4c8d930f00a4d43c690cdf52c8e3bbb6c3174b5d42a6b887e00b65f0c7f94cc50830ad5c443cb3d925552fe46e02db673704c5df948b8c86dccc1c6211a0363ceb392fe187b419b8c23ee5a73c1d8677214ebc6adf5c5321d363c8f22567e306fb0d55f01037e0d0127eec201726e86de193198e8ccdaa1412728e54cba34dc76598e4bfa3c3c38303813925e1e16a3647b7af99a77a97da83e9a01f7d09ef5fa2c44ed84d1eacdfb52235eae8f746de084ecac3aecf8a0feb485d404430821a5c2b4dc7ddbacfaabe925e79926901e9fe7f6934e98266a3e061d7377a92fa9b77d719f8b6f331f18df1337fe744d284e4f28a2567825b91df4ecd62d78816a2f3a2658144de75c3f6b31744e2f82471561b7ec742526657de8212756528c620b21309ba0d1f4eba5a7e7f2fbf348c3f40cbbd6f50a328b0d74abc90a3e7d9bbc45175d9488e8850276dddb3964c7ea0f899ea9dfb946a10b8df93d7ca25a3fb4453582170d6710c76f9510ad0a192ae37a249c1035eff80a794c8f66beba76319c5cb8e19d18b649bcf7555461e7109db915f93571111833cdf0dc8ee1afd002ac4753eb51d1712fd8f154b9a9963574da03e65af72b1f3364c6bf7de68d2e6d1329a9f41410ea616d37d66b0cb5a6b244427a95230712276ca1d40699ab2dbc6a9df1d4a84c7fed9c4919350c40e7f4f91a40d63266cd6b484d6cfbb78fdfe328a454a271a3cb7e19fedf59be674eaaa0326b1b5e5a9c1eac0b55f1d3acca85cef20051f4c680f8f2ee4ac84ab498d959a38bd98b0f90f75e775419ba387f98cde50f1df37ac7c897b0a1a2a0cc3322b5abb4547125f20e6bd9c275c6a7ea9dcab471cc10b97c321056d1ed9ebe6f9db385582f58a1011944c2c9a8b90b321addf7c66db399a4e80c7a40088a2c4c217b8e7fe50b15bde3045c327d0f3ab8ba54f65640d8405d39ff1918b5b4c5dabdf7044daaaed9567b0c5fd1a1efa1b647eff6dc979528443520bc7e975baef0abee8376bc1513aa15c07844465a70de34846fe091d752d1c3ba8fe5017dd16cc1df1647243186c37c6922bd7d439c6e88165f3005d33c0e9e038332a22f8f7d15a5fc9da2e3d08496df4ad2d21c64fc1ab87f42869ae38d3baf955fee7496f2de58a1adbaa7e912fbf823588306dc4881c1f8ded3b3daec5a3e961d0ba4c686c5a91c31014996a18bd8c14e55e2773be77d1803f3586454eddaa89806cf0772fdb7c891f9d363f59db8691e7cabdbc4dc5af33ed45700ef51fd55a44c79cf81bcf4de88a2056425481fbcd71b16037948d1aacdb65028a80c43fecb18e76cd9853e71607e0935cbbb2cf91ef4c53b370a9529f5e5c982e00720f623ad47507bc5570000c01a78d8a93dc2135f64d2b8b51ac22c944377bb7a8775cc1ea9151953154b9ef0ca5d28f1eed293f584548f26330afdfd3fc2aef5e4b0368e4894d9bcb1b578002688a83d6af816a84e4f8e41e248da7aafcbf419dc85dc6f07d0e92fb7ed7b5e5eb18440d5dd79e18c7850cf904661a87dbd0bc95440b5f3856d91b850ee6a0bd1389872466ec47f0debdaf4ebbd2a0ae1cc18c21503e1802a2d570cdbcc70f94da04e3545321970be2689cc5c0639bf92837094eb64d37af8bc5ced4b55375c1e8ba41ba69bfeeafcf011a5ef04c43668226a97deb4db4bcfeda4efac04ee2835117d4fb9ba7820121d763acf34d6aba1582f98bc604943867048bde9d16c38423d9f45ab305d8499d8735df9fb0f6315dbb24b70fc0425476e2198347fb090e147d9efc67179bf838d7b25dee1d0133840b7b7e8a1548040164aa33e77acd9559b35e0a0005f400071b5b2c0f49a3b6fa4fa5e2165f892b5cc55987db7f4e7782479dad4333b8e31debcc8aa0e05ba12c1c6aba488b7fe050f877add2c37b245d37051ec023784258c7c186d5f225f0403497b499bd63e7800283f49fbfa8e36ad7e641a2a4f0c6284d6331c4b9b7ce661cf29a7d90bd2773c72b63fce62c31fd4094b19190451f03ce8f03ca3035d0fd4802eb50be05fefd4783f7f6e1db74d4929a0f2c2ffc77e8c52d1d0a32291d05fdc017bcebe9935d9cebf031fe85bcd31440f91ebdefd3dcc97f78246bcf95e297872c2128a2ba15fd829af7c64fc51621ebade2f0ebf18c31560fbc257b9ef411d52df7edb3c4d33bb2a15f14fec537285f858eef7a1fef44fd82984db0bf25908641adb08e8a3e2e2fd012811d337d07a1a8b1ff72aaa3ea1acbc37ab352aa96245dd8459cf79aa088e0c349e2364daa2e7ca29ab9aed038d136b1b5b61d273fb7f807366dc1ddbb86</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 算法模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>n皇后问题</title>
      <link href="/2022/12/21/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/"/>
      <url>/2022/12/21/n%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="n皇后问题"><a href="#n皇后问题" class="headerlink" title="n皇后问题"></a><a href="https://www.acwing.com/problem/content/845/“n皇后问题”">n皇后问题</a></h1><h2 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h2><ul><li><p>其中对角线下标利用Y=X+b和Y=-X+b 相对应的两种对角线的截距，即b=Y-X和b=Y+X，因为怕Y-X是负数，故加一个n\</p></li><li><p>这里这样采用这种下标主要目的是产生一个<strong>唯一映射</strong>，同一个截距就是同一条对角线，把每条对角线给区分开即可</p></li><li><p><strong>col[i] = dg[i + u]  和  udg[i - u + n]</strong></p></li></ul><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> q[N][N];</span><br><span class="line"><span class="type">bool</span> col[N], dg[N], udg[N];  <span class="comment">//用于记录该位置是否已经被使用过</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == u)        <span class="comment">//到了最后一层时</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">puts</span>(q[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!col[i] &amp;&amp; !dg[i+u] &amp;&amp; !udg[i-u+n])     <span class="comment">//如果该数字没被使用过</span></span><br><span class="line">        &#123;</span><br><span class="line">            q[u][i] = <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line"><span class="comment">//记录一下该值已用,y=x+b 和 y=-x+b，利用截距b来做下标，保持唯一映射关系就行，同一截距就是同一条对角线</span></span><br><span class="line">            col[i] = dg[i + u] = udg[i - u + n] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(u + <span class="number">1</span>);     <span class="comment">//递归进下一层</span></span><br><span class="line">            col[i] = dg[i + u] = udg[i - u + n] = <span class="literal">false</span>;      <span class="comment">//递归结束，回溯，还原现场</span></span><br><span class="line">            q[u][i] = <span class="string">&#x27;.&#x27;</span>;                                    <span class="comment">//还原现场</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            q[i][j]=<span class="string">&#x27;.&#x27;</span>;            <span class="comment">//先把数组全初始化为 ‘.’</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello-world</title>
      <link href="/2022/12/21/hello-world/"/>
      <url>/2022/12/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎使用本网站，本网站尚待开发中，部分功能目前无法实现，还请谅解，本网站后续将用来上传算法题解、本人学习笔记、学习资源等</p><h2 id="本人github账号"><a href="#本人github账号" class="headerlink" title="本人github账号"></a>本人<a href="https://github.com/cni30">github</a>账号</h2><p>風が住む街🍉是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">風が住む街🍉群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">風が住む街🍉聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><h3 id="以下为MarkDown功能试用"><a href="#以下为MarkDown功能试用" class="headerlink" title="以下为MarkDown功能试用"></a>以下为<a href="https://www.fomal.cc/posts/2013454d.html">MarkDown</a>功能试用</h3><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局"，用来为盒状模型提供最大的灵活性"</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><span class='p center logo large'>cni30</span><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h2 id=""><a href="#" class="headerlink" title=""></a><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.print(<span class="string">&quot;Java程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C程序员祝大家新春快乐！&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout&lt;&lt;<span class="string">&quot;C++程序员祝大家新春快乐！&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.Console.WriteLine(<span class="string">&quot;C#程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Python程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Msg(<span class="string">&quot;VB程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&quot;PHP程序员祝大家新春快乐！&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;Java程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Perl程序员祝大家新春快乐！&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">puts <span class="string">&quot;Ruby程序员祝大家新春快乐！&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Printf(<span class="string">&quot;Go程序员祝大家新春快乐！&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;SQL程序员祝大家新春快乐！&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSLog(@&quot;Obj-C程序员祝大家新春快乐！&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ShowMessage(<span class="string">&#x27;Delphi程序员祝大家新春快乐！&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MessageBox(&quot;VC程序员祝大家新春快乐！&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Print &quot;QBasic程序员祝大家新春快乐！&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alert.show(&quot;AS程序员祝大家新春快乐！&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&quot;Lua程序员祝大家新春快乐！&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DISPLAY &#x27;COBOL程序员祝大家新春快乐！&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Elixir：IO.puts &quot;Elixir程序员祝大家新春快乐！&quot;</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat<span class="punctuation">(</span><span class="string">&quot;R程序员祝大家新春快乐！&quot;</span><span class="punctuation">)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">writefln(<span class="string">&quot;D程序员祝大家新春快乐！&quot;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">logger.info(<span class="string">&quot;groovy程序员祝大家新春快乐&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">io:format(<span class="string">&quot;Erlang程序员祝大家新春快乐！&quot;</span>).</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out &quot;ZIM程序员祝大家新春快乐！&quot;</span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;MATLAB程序员祝大家新春快乐！&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;程序员祝大家新春快乐！&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Toast.makeText(getApplicationContext(), &quot;Android程序员祝大家新春快乐&quot;,Toast.LENGTH_SHORT).show()</span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">\frac {\partial f} {\partial x} = 2\sqrt{a}x</script><p>$ H~2~O   \theta $</p><script type="math/tex; mode=display">\frac {\partial Loss } {\partial C }</script><p><em>斜体字</em><br><strong>加粗</strong><br><u>下划线</u><br>== 高亮 ==</p><ul><li>无序1{^脚注1}</li><li>无序2</li></ul><p>-[ ]框1</p><blockquote><p>引用1<br>引用2</p></blockquote><p>{^脚注1}:<br><a href="cni30.github.io&quot;cni30的网站&quot;">本网站</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dfs</title>
      <link href="/2022/12/21/dfs/"/>
      <url>/2022/12/21/dfs/</url>
      
        <content type="html"><![CDATA[<h1 id="n皇后问题"><a href="#n皇后问题" class="headerlink" title="n皇后问题"></a><a href="https://www.acwing.com/problem/content/845/“n皇后问题”">n皇后问题</a></h1><h2 id="解法一"><a href="#解法一" class="headerlink" title="解法一"></a>解法一</h2><ul><li><p>其中对角线下标利用Y=X+b和Y=-X+b 相对应的两种对角线的截距，即b=Y-X和b=Y+X，因为怕Y-X是负数，故加一个n\</p></li><li><p>这里这样采用这种下标主要目的是产生一个<strong>唯一映射</strong>，同一个截距就是同一条对角线，把每条对角线给区分开即可</p></li><li><p><strong>col[i] = dg[i + u]  和  udg[i - u + n]</strong></p></li></ul><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> q[N][N];</span><br><span class="line"><span class="type">bool</span> col[N], dg[N], udg[N];  <span class="comment">//用于记录该位置是否已经被使用过</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == u)        <span class="comment">//到了最后一层时</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            <span class="built_in">puts</span>(q[i]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!col[i] &amp;&amp; !dg[i+u] &amp;&amp; !udg[i-u+n])     <span class="comment">//如果该数字没被使用过</span></span><br><span class="line">        &#123;</span><br><span class="line">            q[u][i] = <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line"><span class="comment">//记录一下该值已用,y=x+b 和 y=-x+b，利用截距b来做下标，保持唯一映射关系就行，同一截距就是同一条对角线</span></span><br><span class="line">            col[i] = dg[i + u] = udg[i - u + n] = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">dfs</span>(u + <span class="number">1</span>);     <span class="comment">//递归进下一层</span></span><br><span class="line">            col[i] = dg[i + u] = udg[i - u + n] = <span class="literal">false</span>;      <span class="comment">//递归结束，回溯，还原现场</span></span><br><span class="line">            q[u][i] = <span class="string">&#x27;.&#x27;</span>;                                    <span class="comment">//还原现场</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            q[i][j]=<span class="string">&#x27;.&#x27;</span>;            <span class="comment">//先把数组全初始化为 ‘.’</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AcWing 4261. 孤独的照片</title>
      <link href="/2022/12/21/%E5%AD%A4%E7%8B%AC%E7%9A%84%E7%85%A7%E7%89%87/"/>
      <url>/2022/12/21/%E5%AD%A4%E7%8B%AC%E7%9A%84%E7%85%A7%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="出处"><a href="#出处" class="headerlink" title="出处"></a><a href="https://www.luogu.com.cn/problem/P7993">出处</a></h1><blockquote><p><del>5000那组结果还错了，暴力又TLE</del></p></blockquote><hr><h2 id="原题-https-www-luogu-com-cn-problem-P7993"><a href="#原题-https-www-luogu-com-cn-problem-P7993" class="headerlink" title="[原题]https://www.luogu.com.cn/problem/P7993"></a>[原题]<a href="https://www.luogu.com.cn/problem/P7993">https://www.luogu.com.cn/problem/P7993</a></h2><h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a><strong><a href="https://www.acwing.com/solution/content/93163/">题解</a></strong></h1><h2 id=""><a href="#" class="headerlink" title=""></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, l[N], r[N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, g = <span class="number">0</span>, h = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;H&#x27;</span>) l[i] = g, g = <span class="number">0</span>, h ++;</span><br><span class="line">        <span class="keyword">else</span> l[i] = h, h = <span class="number">0</span>, g ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>, g = <span class="number">0</span>, h = <span class="number">0</span>; ~i; i --)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;H&#x27;</span>) r[i] = g, g = <span class="number">0</span>, h ++;</span><br><span class="line">        <span class="keyword">else</span> r[i] = h, h = <span class="number">0</span>, g ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">        <span class="keyword">if</span> (l[i] + r[i] &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">long</span> <span class="type">long</span> cnt = (<span class="type">long</span> <span class="type">long</span>)l[i] * r[i] + <span class="built_in">max</span>(<span class="number">0</span>, l[i] - <span class="number">1</span>) + <span class="built_in">max</span>(<span class="number">0</span>, r[i] - <span class="number">1</span>);</span><br><span class="line">            ans += cnt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><hr><h1 id="自己的错解"><a href="#自己的错解" class="headerlink" title="自己的错解"></a><strong>自己的错解</strong></h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,G,H,num=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c[N],ch;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=n-i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            G=H=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;i;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(c[j+k]==<span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">                    G++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    H++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(G==<span class="number">1</span>||H==<span class="number">1</span>)</span><br><span class="line">                num++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
